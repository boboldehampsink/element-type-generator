#!/usr/bin/php
<?php
/**
 * elementtype
 *
 * This script will generate a basic Craft Element Type based on
 * the Events sample plugin by Pixel & Tonic
 *
 * @author    Bob Olde Hampsink <b.oldehampsink@itmundi.nl>
 * @copyright Copyright (c) 2015, Bob Olde Hampsink
 * @link      http://github.com/boboldehampsink
 */

/**
 * Require arguments
 */
if (!isset($argv[1])) {
    exit("You need to give up a plugin name.\r\n");
}
if (!isset($argv[2])) {
    exit("You need to give up a model name.\r\n");
}
if (!isset($argv[3])) {
    exit("You need to give up a section name.\r\n");
}

/**
 * Get arguments
 */
$name = $argv[1];
$model = $argv[2];
$section = $argv[3];
$destination = isset($argv[4]) ? $argv[4] : '.';

/**
 * Make sure destination dir exists
 */
@mkdir($destination);

/**
 * Go into destination dir
 */
chdir($destination);

/**
 * Log this
 */
echo "Preparing destination " . realpath($destination) . "\r\n";

/**
 * Clone the sample plugin repo
 */
exec('git clone https://github.com/pixelandtonic/Events.git');

/**
 * Move events plugin and rename
 * and delete old dir
 */
rename('Events/events', strtolower($name));
exec('rm -rf Events');

/**
 * Log this
 */
echo "Used Events to create new Element Type structure\r\n";

/**
 * Go into ElementType dir
 */
chdir($name);

/**
 * Loop through all files
 */
$directory = new RecursiveDirectoryIterator(".", RecursiveDirectoryIterator::SKIP_DOTS);
$files = new RecursiveIteratorIterator($directory, RecursiveIteratorIterator::SELF_FIRST);
foreach ($files as $file) {

    // Should be a dir
    if (!$file->isDir()) {

        // Modify file name
        $modified = str_replace('calendars', $section.'s', $file);
        $modified = str_replace('Calendar', ucfirst($section), $modified);
        $modified = str_replace('Event', ucfirst($model), $modified);
        $modified = str_replace('Events', ucfirst($name), $modified);

        // Check if something's modified
        if($modified != $file) {

            // Log
            echo "- Renaming " . $file . " to " . $modified . "\r\n";

            // Ensure directory
            @mkdir(strtolower(dirname($modified)));

            // Rename
            rename($file, $modified);
        }

        // Now open up file and rewrite contents
        $contents = file_get_contents($modified);

        // Log
        echo "- Renaming contents of " . $modified . "\r\n";

        // Rename
        $touched = str_replace('Events', ucfirst($name), $contents);
        $touched = str_replace('events', strtolower($name), $touched);
        $touched = str_replace('Event', ucfirst($model), $touched);
        $touched = str_replace('event', strtolower($model), $touched);
        $touched = str_replace('Calendars', ucfirst($section).'s', $touched);
        $touched = str_replace('calendars', strtolower($section).'s', $touched);
        $touched = str_replace('Calendar', ucfirst($section), $touched);
        $touched = str_replace('calendar', strtolower($section), $touched);
        
        // Save
        file_put_contents($modified, $touched);
    }
}

/**
 * Cleanup
 */
exec('rm -rf templates/calendars');
